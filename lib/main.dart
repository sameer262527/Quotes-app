import 'package:flutter/material.dart';

void main() {
  runApp(const QuotesApp());
}

class QuotesApp extends StatefulWidget {
  const QuotesApp({super.key});

  @override
  State<QuotesApp> createState() => _QuotesAppState();
}

class _QuotesAppState extends State<QuotesApp> {
  final List<String> quotes = [
    
    "рдмрд┐рддреНрджреИ рдЧрд░реЗрдХреЛ рд╕рдордп,рдЭрд░реНрджреИ рдЧрд░реЗрдХреЛ рдкрд╛рдд рд░ рдмрджрд▓рд┐рдБрджреИ рдЧрдПрдХреЛ рдорд╛рдиреНрдЫреЗрд▓реЗ рдзреЗрд░реИ рдХреБрд░рд╛ рд╕рд┐рдХрд╛рдЙрдБрджреЛ рд░рд╣реЗрдЫ рдЬрд┐рдиреНрджрдЧреАрдорд╛!тЭд",
    "рдХреЗрд╣реА рдХреБрд░рд╛ рдЕрдзреБрд░реЛ рдиреИ рд░рд╛рдореНрд░реЛ, рдкреБрд░рд╛ рднрдпреЛ рднрдиреЗ рдЪрд╛рд╣рд╛рдирд╛ рдиреИ рдХрд╣рд╛рдБ рд░рд╣рдиреНрдЫ рд░ редтЭдтАНЁЯй╣",
    "рд▓реЗрдЦреНрди рдорд┐рд▓реНрдиреЗ рднрдиреЗрдХреЛ рд╢рдмреНрджрд╣рд░реВ рдорд╛рддреНрд░реИ рд░рд╣реЗрдЫрди, рдареНрдпрд╛рдХреНрдХреИ рдорди рджреБрдЦреЗрдХреЛ рдЪрд╛рд╣рд┐рдБ рд▓реЗрдЦреНрди рдирдорд┐рд▓реНрджреЛ рд░рд╣реЗрдЫ !!тЭдтАНЁЯй╣",
    "рдореЗрд░реЛ рд╕рдЩрдЧрд░реНрд╖рдорд╛ рд╕рд╛рде рджрд┐рдиреЗ рддрд┐рдорд┐рд▓рд╛рдИ рдореЗрд░реЛ рд╕рдлрд▓рддрд╛рдХреЛ рд╣рдХрджрд╛рд░ рдмрдирд╛рдЙрдиреЗ рдЫреБ редредтЭд",
    "рд╕рдВрдШрд░реНрд╖ рд╕рдмреИрд▓реЗ рдЧрд░реНрдЫ рддрд┐рдореА рддреНрдпрд╕рд▓рд╛рдИ рднрд╛рд░ рдХрд╣рд┐рд▓реЗ рдирдорд╛рдиреНрдиреБ рджрд┐рди рд╕рдмреИ рдХреЛ рдЖрдЙрдБрдЫ, рдмрд╕реН рддрд┐рдореА рд╣рд╛рд░ рдХрд╣рд┐рд▓реЗ рдирдорд╛рдиреНрдиреБ редредтЭд",
    "рдЭрдЧрдбрд╛ рднрдПрдХреЛ рд░ рд░рд┐рд╕ рдорд╛ рдмреЛрд▓реЗрдХреЛ рдХреБрд░рд╛рдХреЛ рдкрд┐рд░ рдирдорд╛рдиреНрдиреБ рддрд┐рдореА, рдмрд╕ рдпрддрд┐ рдмреБрдЭреНрдиреБ рдХрд┐ рддрд┐рдореНрд░реЛ рд▓рд╛рдЧреА рдореЗрд░реЛ рд░рд┐рд╕ рдПрдХ рдЫрд┐рдирдХреЛ рд▓рд╛рдЧреА рд╣реЛ рд░ рдкреНрд░реЗрдо рдЬрд┐рдиреНрджрдЧреА рдкрдЫрд┐ рд╕рдореНрдо рдХреЛ редредтЭд",
    "рдордирдХреЛ рдорд╛рдпрд╛ рдмреБрдЭреНрдиреБ рд╣реИ рддрд┐рдореА, рдпреЛ рдУрдард▓реЗ рдд рдХрд╣рд┐рд▓реЗ рдХрд╣реАрдВ рдирдорд┐рдареЛ рдкрдирд┐ рдмреЛрд▓рд┐рджрд┐рдиреНрдЫрдиреН редредтЭд",
    "рдХрд╕реНрддреЛ рдЕрдиреМрдареЛ рд╕рдореНрдмрдиреНрдз рд╕рдордп рд▓реЗ рджреВрд░реА рд▓реНрдпрд╛рдПрдХреЛ рдЫ, рдореБрдЯреБ рдорд╛ рдордиреН рднрд░реА рдорд╛рдпрд╛ рдкрд▓рд╛рдПрдХреЛ рдЫ редредтЭд",
    "рдорд░реЗрдЫреБ рднрдиреЗ рдЫреБрдЯреНрдЯреИ рдХреБрд░рд╛, рдЬрд┐рд╡рд┐рдд рд░рд╣реБрдиреНрдЬреЗрд▓ рддрд┐рдореАрд▓реЗ рдЫреЛрдбреЗрд░ рдЬрд╛ рднрдиреЗ рдкрдирд┐ рдЬрд╛рди рд╕рдХреНрджрд┐рди рддреНрдпрддрд┐ рдкреНрд░реЗрдо рдЧрд░реНрдЫреБ рддрд┐рдореАрд▓рд╛рдИ редредтЭдтАНЁЯй╣",
    "рдорди рдкрд░реЗрдХреЛ рдорд╛рдиреНрдЫреЗ рд╣реМ рддрд┐рдореА рдмреЛрд▓реЗ рдкрдирд┐ рди рдирдмреЛрд▓реЗ рдкрдирд┐ рд╕рдзреИ рдорди рдо рд╣реБрдиреЗ рдЫреМ редредтЭд",
    "рдзреЗрд░реИ рдиреИ рдорди рджреБрдЦреНрджреЛ рд░рд╣реЗрдЫ рдЖрдлреНрдиреЛ рдорд╛рдиреНрдЫреЗрд▓реЗ рдкрд╣рд┐рд▓рд╛рдХреЛ рднрдиреНрджрд╛ рдлрд░рдХ рд╡реНрдпрд╡рд╣рд╛рд░ рджреЗрдЦрд╛рдЙрдБрджрд╛ редредтЭдтАНЁЯй╣",
    "рдпреЛ рд╕рд╛рдерд┐ рднрдиреНрдиреЗ рдХреБрд░рд╛ рдкрдирд┐ рдирд┐рдХреНрдХреИ рдЕрдЪрдореНрдордХреЛ рдЫ рд╣реИ рд╕рд╛рдердорд╛ рд╣реБрдБрджрд╛ рдмрд╛рдд рд▓рд╛рдореЛ, рд░ рд╕рд╛рдердорд╛ рдирд╣реБрджрд╛ рдпрд╛рдж рд▓рд╛рдореЛ редредтЭд",
    "рдкрд░реНрдЦрд╛рдЗ рд▓рд╛рдореЛ рд╣реЛрд▓рд╛ рдХреБрд░реА рдмрд╕реМрд▓рд╛, рджреБрд░реА рдмрдвреНтАМрд▓рд╛ рд╕рд╣рд┐ рджрд┐рдЙрдБрд▓рд╛ рддрд░ рддрд┐рдореА рд╕рдБрдЧ рд╕реБрд░реБ рднрдПрдХреЛ рдкреНрд░реЗрдордХреЛ рдпрд╛рддреНрд░рд╛ рддрд┐рдореА рдореИ рдЕрдиреНрддреНрдп рд╣реЛрд╕ редредЁЯШШ",
    "рдЫреЛрдбреЗрд░ рдЬрд╛рдиреНрдЫ рдХрд┐ рднрдиреЗрд░ рдирд╕реЛрдЪреНрджрд╛ рдирд┐ рд╣реБрдиреНрдЫ рдЬрдм рд╕рдореНрдо рдмрд╛рдЪреНрдЫреБ рддрд┐рдореНрд░реИ рднтАМрдПрд░ рдирд╛рдЪреНрдЫреБ редредЁЯе║",
    "рджреБрдЦ рдкрд░реНрджрд╛ рддрд┐рдореНрд░реЛ рд╕рд╛рде рд╣реЛрд╕, рдкреНрд░рд╛рдг рдЬрд╛рджрд╛ рдкрдирд┐ рддрд┐рдореНрд░реЛ рдХрд╛рдЦ рд╣реЛрд╕ редредтЭд",
    "рд╣рд░реЗрдХ рджрд┐рди рдЦреБрд╢реА рджрд┐рди рд╕рдХреНрдЫреБ рдд рднрдиреНрджрд┐рди рдо рддрд░ рддрд┐рдореНрд▓рд╛рдИ рдзреЛрдХрд╛ рдЪрд╛рдИ рдХреИрд▓реЗ рджрд┐рдиреЗ рдЫреИрди редредтЭдЁЯТР",
    "рдХреЗ рд▓реЗрдЦреНрдиреБ рд╢рдмреНрдж рдЬреАрд╡рди рдиреИ рдирд┐рдГрд╢рдмреНрдж рдорд╛ рдЖрдПрд░ рдЕрдбрд┐рдПрдХреЛ рдЫ !!тЭдтАНЁЯй╣",
    "рдо рдХрд╕рд░реА рд╣рд╛рд░ рдорд╛рдиреМ ? рдореЗрд░реЛ рдЕрдЧрд╛рдбреА рджреБрдГрдЦ рдХреЛ рдкрд╣рд╛рдб рднрдПрддрд╛ рдкрдирд┐ рдореЗрд░реЛ рд╕рдлрд▓рддрд╛ рдХреБрд░реЗрд░ рдмрд╕реЗрдХрд┐ рдЫрд┐рди рдореЗрд░реА рдЖрдорд╛ редредтЭд"
    "ITS MY PROMISEЁЯе║ I'll always love you for a lifetime !!ЁЯШШ",
    "рдо рд╕рдлрд▓ рднрдПрд░ рддрд┐рдореАрд▓рд╛рдИ рд▓рд┐рди рдЖрдЙрдиреЗ рдЫреБ, рддрд┐рдореА рдорд▓рд╛рдИ рдкрд░реНрдЦрд┐ рдмрд╕реНрдиреБ рд╣реИ рдорд╛рдпрд╛ редредтЭд",
    "рддрд┐рдореА рддреНрдпреЛ рдорд╛рдиреНрдЫреЗ рд╣реМрдБ рдЬрд╕реНрд▓рд╛рдИ рдо рдХрд╣рд┐рд▓реЗ рдирд┐ рдмрд┐рд░реНрд╕рд┐рди рд░ рдЫреЛрдбреНрди рд╕рдХреНрджрд┐рди редредтЩб",
    "рддрд┐рдореАрд▓рд╛рдИ рдЕрдореБрд▓реНрдп рдЙрдкрд╣рд╛рд░рд╣рд░реБ рдд рджрд┐рдиреБ рдирд╕рдХреБрдБрд▓рд╛, рддрд░ рдЬрд┐рдмрдирдХреЛ рд╣рд░реЗрдХ рдкрд░рд┐рд╕реНрдерд┐рддрд┐рдорд╛ рд╕рд╛рде рдЕрдирд┐ рдЬрд┐рд╡рдирдорд╛ рдорд╛рдпрд╛рдХреЛ рдХрдорд┐ рдХрд╣рд┐рд▓реЗ рдорд╣рд╕реБрд╕ рдЧрд░рд╛рдЙрдиреЗ рдЫреИрди редредЁЯШШ",
    "рднрдиреНрди рдирд╕рдХреБрд▓рд╛ рдХрддрд┐ рдорд╛рдпрд╛ рдЫ рднрдиреЗрд░ рддрд░ рдЬрддрд┐ рдЫ рддрд┐рдореНрд░реЛ рд▓рд╛рдЧрд┐ рдорд╛рддреНрд░ рдЫ рдорд╛рдпрд╛ редредЁЯШШ",
    "рдЕрдкреБрд░реЛ рдирд┐рдиреНрджреНрд░рд╛, рдЖрд╢ рд▓рд╛рдЧреНрджреЛ рдмрд┐рд╣рд╛рдиреА, рджрд┐рдХреНрдХ рд▓рд╛рдЧреНрджреЛ рджрд┐рдирд╣рд░реБ, рдЕрдиреНрдЬрд╛рди рднрд╡рд┐рд╖реНрдп, рдерд╛рдХреЗрдХреЛ рд╢рд░рд┐рд░, рдЕрдирд┐ рд╕рд┐рд░рд╛рдиреА рдореБрдирд┐ рд╕рдЬрд┐рдПрдХреЛ рд╣рд░реЗрдХ рд╕рдкрдирд╛ рд░ рд░рд╣рд░рд╣рд░реВрдорд╛ рдмрд┐рддреНрддреИ рдЧрдПрдХреЛ рдЫ рдЬрд┐рдиреНрджрдЧреА !!тЭдтАНЁЯй╣",
    "рдорд╛рдпрд╛ рдЧрд░реНрдЫреБ рд░ рдкреЛ рдпреЛ рдирдЧрд░ рддреНрдпреЛ рдирдЧрд░, рддреНрдпрд╛ рдирдЬрд╛ рднрдиреНрдЫреБ рддрдБ рдирддреНрд░ рдЕрд░реВрдХреЛ рдЫреЛрд░реАрдХреЛ рдХреЗ рдорддреНрд▓рдк рдорд▓рд╛рдИ редредтЭд",
    "рдХрд╕реИрдХреЛ рдЬрд┐рдиреНрджрдЧреАрдХреЛ рдЦреБрд╢реА рд╣реМ рддрд┐рдореА, рдпрд╣рд┐ рд╕реЛрдЪреЗрд░ рдЖрдлреНрдиреЛ рдЦреНрдпрд╛рд▓ рд░рд╛рдЦреНрдиреБ рд╣реИ редредтЭд",
    "рдЕрдм рд╕реЛрдЪреЗрдХреЛ рдорд╛рддреНрд░ рдкреБрд░рд╛ рд╣реБрди рдмрд╛рдХреА рдЫ рдЦреЛрдЬреЗрдХреЛ рдЬрд╕реНрддреЛ рдд рддрд┐рдореА рднреМрддрд┐рдХ рд╕рдХреЗ рдорд╛рдпрд╛ редредЁЯШШ",
    "Everyone has someone special in their life, for me it's you.тЭд",
    "Don't Worry my girl your boy is focusing in his career not another girls.тЭд",
    "Never think you're alone, my girl. I'm always with you.тЭд",
    "I don't just see a girlfriend, I see a wife, a mom to my kids, my bestfriend and the most gorgeous girl in the universe.ЁЯШШ"
    
    
  ];

  final List<String> favoriteQuotes = [];

  void toggleFavorite(String quote) {
    setState(() {
      if (favoriteQuotes.contains(quote)) {
        favoriteQuotes.remove(quote);
      } else {
        favoriteQuotes.add(quote);
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Quotes App',
      theme: ThemeData(
        primarySwatch: Colors.pink,
      ),
      home: HomePage(quotes: quotes, favoriteQuotes: favoriteQuotes, toggleFavorite: toggleFavorite),
    );
  }
}

class HomePage extends StatelessWidget {
  final List<String> quotes;
  final List<String> favoriteQuotes;
  final Function(String) toggleFavorite;

  const HomePage({super.key, required this.quotes, required this.favoriteQuotes, required this.toggleFavorite});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Quotes App')),
      drawer: Drawer(
        child: ListView(
          children: [
            const DrawerHeader(
              decoration: BoxDecoration(color: Colors.pink),
              child: Text(
                'Quotes App',
                style: TextStyle(color: Colors.white, fontSize: 24),
              ),
            ),
            ListTile(
              title: const Text('Home'),
              onTap: () {
                Navigator.pop(context);
              },
            ),
            ListTile(
              title: const Text('Favorites'),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => FavoritesPage(favoriteQuotes: favoriteQuotes),
                  ),
                );
              },
            ),
            ListTile(
              title: const Text('About'),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const AboutPage(),
                  ),
                );
              },
            ),
          ],
        ),
      ),
      body: ListView.builder(
        itemCount: quotes.length,
        itemBuilder: (context, index) {
          final quote = quotes[index];
          final isFavorite = favoriteQuotes.contains(quote);
          return Card(
            elevation: 4,
            margin: const EdgeInsets.all(8.0),
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
            child: ListTile(
              title: Text(quote),
              trailing: IconButton(
                icon: Icon(
                  isFavorite ? Icons.favorite : Icons.favorite_border,
                  color: isFavorite ? Colors.pink : null,
                ),
                onPressed: () => toggleFavorite(quote),
              ),
            ),
          );
        },
      ),
      bottomNavigationBar: const BottomAppBar(
        child: Padding(
          padding: EdgeInsets.all(8.0),
          child: Text(
            '┬й2025_All Right reserved by \n Sameer TharuтЭд',
            textAlign: TextAlign.center,
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
        ),
      ),
    );
  }
}

class FavoritesPage extends StatelessWidget {
  final List<String> favoriteQuotes;
  const FavoritesPage({super.key, required this.favoriteQuotes});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Favorite Quotes')),
      body: favoriteQuotes.isEmpty
          ? const Center(child: Text('No favorite quotes yet!'))
          : ListView.builder(
              itemCount: favoriteQuotes.length,
              itemBuilder: (context, index) {
                return Card(
                  elevation: 4,
                  margin: const EdgeInsets.all(8.0),
                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                  child: ListTile(
                    title: Text(favoriteQuotes[index]),
                  ),
                );
              },
            ),
    );
  }
}

class AboutPage extends StatelessWidget {
  const AboutPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('About')),
      body: const Center(
        child: Padding(
          padding: EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                'Quotes App\nDeveloped by: Sameer TharuтЭд\nVersion: 1.0.0',
                textAlign: TextAlign.center,
                style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
